# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

input AddItemInput {
  characterId: String!
  itemId: String!
  type: AddItemType!
}

enum AddItemType {
  ITEM
  ARMOR
  WEAPON
}

type Armor implements IItem {
  id: ID!
  name: String!
  description: String!
  type: ArmorType!
  category: ArmorCategory!
  position: ArmorPosition!
  physicArmor: Int!
  magicArmor: Int!
  bonusStrength: Int!
  bonusDexterity: Int!
  bonusIntelligence: Int!
  bonusVitality: Int!
}

enum ArmorCategory {
  LIGTH
  MEDIUM
  HEAVY
}

enum ArmorPosition {
  HEAD
  CHEST
  GREAVES
  BOOTS
  GLOVES
}

type ArmorType {
  id: ID!
  name: String!
  category: ArmorCategory!
  position: ArmorPosition!
  description: String
  physicArmor: Int!
  magicArmor: Int!
  minBonusStrength: Int!
  maxBonusStrength: Int!
  minBonusDexterity: Int!
  maxBonusDexterity: Int!
  minBonusIntelligence: Int!
  maxBonusIntelligence: Int!
  minBonusVitality: Int!
  maxBonusVitality: Int!
}

type AuthResponse {
  token: String!
  message: String
}

type Character {
  id: ID!
  name: String!
  strength: Int
  dexterity: Int
  intelligence: Int
  vitality: Int
  equipment: Equipment!
  inventory: Inventory!
  race: Race!
}

input CreateArmorInput {
  armorTypeId: String!
}

input CreateArmorTypeInput {
  name: String!
  category: ArmorCategory!
  position: ArmorPosition!
  description: String
  physicArmor: Int!
  magicArmor: Int!
  minBonusStrength: Int!
  maxBonusStrength: Int!
  minBonusDexterity: Int!
  maxBonusDexterity: Int!
  minBonusIntelligence: Int!
  maxBonusIntelligence: Int!
  minBonusVitality: Int!
  maxBonusVitality: Int!
}

input CreateCharacterInput {
  name: String!
  raceId: String!
}

input CreateRaceInput {
  name: String!
  description: String
  base_strength: Int!
  base_dexterity: Int!
  base_intelligence: Int!
  base_vitality: Int!
}

input CreateWeaponInput {
  weaponTypeId: String!
}

input CreateWeaponTypeInput {
  name: String!
  category: WeaponCategory!
  damageType: DamageType!
  position: WeaponPosition!
  description: String
  minimumDamage: Int!
  maximumDamage: Int!
  minBonusStrength: Int!
  maxBonusStrength: Int!
  minBonusDexterity: Int!
  maxBonusDexterity: Int!
  minBonusIntelligence: Int!
  maxBonusIntelligence: Int!
  minBonusVitality: Int!
  maxBonusVitality: Int!
}

enum DamageType {
  MELEE_PHYSICAL
  MELEE_MAGIC
  DISTANCE_PHYSICAL
  DISTANCE_MAGIC
}

type Equipment {
  id: ID!
  handRight: Weapon
  handLeft: Weapon
  twoHanded: Weapon
}

input EquipWeaponInput {
  characterId: String!
  weaponId: String!
}

interface IItem {
  id: ID!
  name: String!
  description: String
}

type Inventory {
  id: ID!
  items: [IItem!]!
  golds: Int!
  capacity: Int!
}

input LoginInput {
  username: String!
  password: String!
}

type Mutation {
  createCharacter(createCharacterData: CreateCharacterInput!): Character!
  updateCharacter(updateCharacterData: UpdateCharacterInput!): Character!
  addItem(addItemData: AddItemInput!): Inventory!
  createWeaponType(createWeaponTypeData: CreateWeaponTypeInput!): WeaponType!
  createWeapon(createWeaponData: CreateWeaponInput!): Weapon!
  createArmor(createArmorData: CreateArmorInput!): Armor!
  createArmorType(createArmorTypeData: CreateArmorTypeInput!): ArmorType!
  equipWeapon(equipWeaponData: EquipWeaponInput!): Character!
  createRace(createRaceData: CreateRaceInput!): Race!
  register(registerData: RegisterInput!): AuthResponse!
}

type Query {
  character(id: String!): Character!
  characters: [Character!]!
  weaponTypes: [WeaponType!]!
  weapon(id: String!): Weapon!
  weapons: [Weapon!]!
  armors: [Armor!]!
  armorTypes: [ArmorType!]!
  races: [Race!]!
  login(loginData: LoginInput!): AuthResponse!
}

type Race {
  id: ID!
  name: String!
  description: String
  base_strength: Int!
  base_dexterity: Int!
  base_intelligence: Int!
  base_vitality: Int!
}

input RegisterInput {
  username: String!
  password: String!
  email: String
}

input UpdateCharacterInput {
  id: String!
  name: String!
}

type User {
  id: ID!
  username: String!
  role: UserRole!
  characters: [Character!]!
}

enum UserRole {
  USER
  MJ
  ADMIN
  GOD
}

type Weapon implements IItem {
  id: ID!
  name: String!
  description: String!
  type: WeaponType!
  category: WeaponCategory!
  damageType: DamageType!
  position: WeaponPosition!
  bonusStrength: Int!
  bonusDexterity: Int!
  bonusIntelligence: Int!
  bonusVitality: Int!
}

enum WeaponCategory {
  SWORD
  AXE
  MACE
  BOW
  WAND
  STAFF
}

enum WeaponPosition {
  TWO_HANDED
  HAND_RIGHT
  HAND_LEFT
}

type WeaponType {
  id: ID!
  name: String!
  category: WeaponCategory!
  damageType: DamageType!
  position: WeaponPosition!
  description: String
  minimumDamage: Int!
  maximumDamage: Int!
  minBonusStrength: Int!
  maxBonusStrength: Int!
  minBonusDexterity: Int!
  maxBonusDexterity: Int!
  minBonusIntelligence: Int!
  maxBonusIntelligence: Int!
  minBonusVitality: Int!
  maxBonusVitality: Int!
}
